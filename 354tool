#!/bin/bash
## configure script variables here
	CONFIG=config
	LECTURE_FILE=lec.txt
## do not modify below this!

	
while true
do
	echo -e '\033[0;35m####################################################'
	echo -e '\033[0;31m       *****     ****    *****    *****   *   *     '
	echo -e '\033[0;31m      *         *            *    *       *   *     '
	echo -e '\033[0;31m      *         *****     ****    *****   *****     '
	echo -e '\033[0;31m      *             *        *        *       *     '
	echo -e '\033[0;31m       *****    ****     *****    *****       *     '
	echo -e '\033[0;35m####################################################'
	echo -e '\033[0;37m '
	echo 'A simple 354 menu tool, to make your life easier...ish.'
	echo 'Developed by Kedar Abhyankar, kedar@cs.purdue.edu, https://kedarabhyankar.me'
	echo
	echo -e '\033[0;31m (1) Connect to a Xinu Backend'
	echo -e '\033[0;32m (2) List lectures'
	echo -e '\033[0;33m (3) Open a lecture'
	echo -e '\033[0;34m (4) Get Presentation'
	echo -e '\033[0;35m (5) Open Course Webpage'
	echo -e '\033[0;36m (6) Transfer specfic file to xinu source'
	echo -e '\033[0;37m (7) Exit'
	read INP

	if [ $INP -eq 1 ]; then
		WRITE_FLAG=0
		if test -f "$CONFIG"; then
			USERNAME=$(sed -n 1p $CONFIG | cut -d'=' -f2) #get username from config
  			XINU_CHOICE=$(sed -n 2p $CONFIG | cut -d'=' -f2) #preferred backend
		else
			echo "What is your username?"
			read USERNAME
			echo "What is your preferred Xinu Backend? Entering nothing will choose a random backend."
			read XINU_CHOICE
			WRITE_FLAG=1
		fi

		if [ -z $XINU_CHOICE ]; then
			XINU_CHOICE=$((1 + $RANDOM % (1 + 21 - 1)))
		fi
	
		if [ $XINU_CHOICE -gt  21 ]; then
			echo "XINU_CHOICE GREATER THAN 21"
			exit 1
		fi

		if [ $XINU_CHOICE -lt 1 ]; then
			echo "XINU_CHOICE LESS THAN 1"
			exit 1
		fi 
	
		if [ $XINU_CHOICE -ge 1 ] && [ $XINU_CHOICE -le 9 ]; then
			printf -v XINU_CHOICE "%02g" $XINU_CHOICE
		fi

		if [ $WRITE_FLAG -eq 1 ]; then
			echo -e "USERNAME=$USERNAME\nPREF_XINU=$XINU_CHOICE\n" >> $CONFIG
		fi

		SSH_STRING="xinu$XINU_CHOICE.cs.purdue.edu"
		echo "ssh-ing into $USERNAME@$SSH_STRING"
		sleep 1
		ssh "$USERNAME@$SSH_STRING"
	elif [ $INP -eq 2 ]; then

		echo "Redownloading ther lecture file in case any new links have been posted."
		echo "What is your username?"
		read USERNAME
		scp $USERNAME@data.cs.purdue.edu:/homes/cs354/lec.txt .
		echo "Downloaded the file!"
		cat lec.txt | grep -v "https://"		
	elif [ $INP -eq 3 ]; then
		echo "Redownloading the lecture file in case any new links have been posted."
		echo "What is your username?"
		read USERNAME
		scp $USERNAME@data.cs.purdue.edu:/homes/cs354/lec.txt .
		echo "Downloaded the file!"
		echo "What lecture do you want to open?"
		read LEC_NUM
		LEC_URL=$(cat $LECTURE_FILE | grep -A 1 "Lecture $LEC_NUM:" | grep -v "Lecture $LEC_NUM")
		if [ -z $LEC_URL ]; then
			echo "The requested lecture could not be found."
		else
			echo $LEC_URL
		fi
	elif [ $INP -eq 4 ]; then
		echo "What presentation number do you want?"
		read PRES_NUM
		echo "What is your username?"
		read USERNAME
		scp $USERNAME@data.cs.purdue.edu:/homes/cs354/Presentation-$PRES_NUM.pdf .
		echo "Downloaded Notes #$PRES_NUM!"
	elif [ $INP -eq 5 ]; then
		echo -e '\033[0;32m Opening the Course Webpage!'
		sleep 1
		open "https://www.cs.purdue.edu/homes/cs354/"
	elif [ $INP -eq 6 ]; then
		echo -e 'What is the path of the file you want to transfer?\nIt should be in respect to this directory.\nFor this script to work correctly, the directory structure must be:\n
		--Xinu Launcher\n
		----354tool\n
		--xinu-spring2021\n
		Then, reference the file path from within xinu-spring2021. So, if the file is\n
		main.c, under the system directory, then just type:\n
		system/main.c'
		read FILE_PATH
		echo "What is your username?"
		read USERNAME
		scp ../xinu-spring2021/$FILE_PATH $USERNAME@data.cs.purdue.edu:xinu-spring2021/$FILE_PATH	
		echo 'Transferred!' 
	elif [ $INP -eq 7 ]; then
		echo 'Exiting script!'
		exit 1
	else
		echo 'Invalid choice!'
	fi
done
	
